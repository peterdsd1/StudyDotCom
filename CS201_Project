package cs201;

/* 
NOTE TO REVIEWER: Directions in Part 1 (labeled with a prefix of P1 in the comments below) of the prompt 
says to display the current contents of the array, then to display the contents after a bubble sort. 
I realize that this assignment is trying to ask the user to answer as many state capitals and to prompt 
for the total correct answers. 

Since the assignment wants me to display all of the answers first, we can officially begin 
the game AFTER I display all of the states and its capitals
 
*/


import java.util.*;



public class Main {
	   public static void main (String [] args) {
	       
	   	Scanner answer = new Scanner(System.in);
	   	System.out.println("Thanks for playing!\nYour score for the US States & Capitals Game is " + data(answer));
	   }
	   	//P1: 50 States and Capitals are sorted in a two-dimensional array in order by state name.
	   	public static int data(Scanner input) {
	   	String [][] stateCapital = {
	   			{ "Alabama", "Montgomery" },
	   			{ "Alaska", "Juneau" },
	   			{ "Arizona", "Phoenix" },
	   			{ "Arkansas", "Little Rock" },
	   			{ "California", "Sacramento" },
	   			{ "Colorado", "Denver" },
	   			{ "Connecticut", "Hartford" },
	   			{ "Delaware", "Dover" },
	   			{ "Florida", "Tallahassee" },
	   			{ "Georgia", "Atlanta" },
	   			{ "Hawaii", "Honolulu" },
	   			{ "Idaho", "Boise" },
	   			{ "Illinois", "Springfield" },
	   			{ "Indiana", "Indianapolis" },
	   			{ "Iowa", "Des Moines" },
	   			{ "Kansas", "Topeka" },
	   			{ "Kentucky", "Frankfort" },
	   			{ "Louisiana", "Baton Rouge" },
	   			{ "Maine", "Augusta" },
	   			{ "Maryland", "Annapolis" },
	   			{ "Massachusetts", "Boston" },
	   			{ "Michigan", "Lansing" },
	   			{ "Minnesota", "Saint Paul" },
	   			{ "Mississippi", "Jackson" },
	   			{ "Missouri", "Jefferson City" },
	   			{ "Montana", "Helena" },
	   			{ "Nebraska", "Lincoln" },
	   			{ "Nevada", "Carson City" },
	   			{ "New Hampshire", "Concord" },
	   			{ "New Jersey", "Trenton" },
	   			{ "New Mexico", "Santa Fe" },
	   			{ "New York", "Albany" },
	   			{ "North Carolina", "Raleigh" },
	   			{ "North Dakota", "Bismarck" },
	   			{ "Ohio", "Columbus" },
	   			{ "Oklahoma", "Oklahoma City" },
	   			{ "Oregon", "Salem" },
	   			{ "Pennsylvania", "Harrisburg" },
	   			{ "Rhode Island", "Providence" },
	   			{ "South Carolina", "Columbia" },
	   			{ "South Dakota", "Pierre" },
	   			{ "Tennessee", "Nashville" },
	   			{ "Texas", "Austin" },
	   			{ "Utah", "Salt Lake City" },
	   			{ "Vermont", "Montpelier" },
	   			{ "Virginia", "Richmond" },
	   			{ "Washington", "Olympia" },
	   			{ "West Virginia", "Charleston" },
	   			{ "Wisonsin", "Madison" },
	   			{ "Wyoming", "Cheyenne" },
		
	   	};
	   	
	   	//P1: Display current contents of the array
	   	
	   	System.out.println("========== STATES & IT'S CAPITAL ==========\n");
	   		for (int i = 0; i < stateCapital.length; i++) {
	   			System.out.println(stateCapital[i][0] + ", " + stateCapital[i][1]);
	   		};	
	   			
	   	//P1: Bubble sort to sort content by Capital
	   	
	   		System.out.println("\n========== STATES SORTED BY IT'S CAPITAL ==========\n");
	   			
	       	bubbleSort(stateCapital);
	       	for (int i = 0; i < stateCapital.length; i++) {
	       		System.out.println(stateCapital[i][0] + ", " + stateCapital[i][1]);
	   		};
	   		
	   		
	   	//P1: This is the start of our official program where we ask the user to enter answers for all state capitals
	   	
	   	   System.out.println("\n========================================");
	   	   System.out.println("\n========================================");
	   	   System.out.println("\nWELCOME TO THE US STATES & CAPITAL GAME");
	   	   System.out.println("\n========================================");
	   	   System.out.println("\n========================================");
	   	   
	   	   System.out.println("\nAnswer as many Capitals as you can for each State.\nYour score will be shown at the end of the program");
	   	   
	   	/* 
	   	   The assignment did not specifically ask for which state to start with or their order,
	   	   So I will just go by the ascending order from the bubble sort.
	   	   
	   	 */
	   	
	   	   //Start the count at 0 and add to the score as users answer correctly
	   	   int count = 0;
	   			   
	   	   for (int i = 0; i < stateCapital.length; i++) {
	   		   System.out.println("\nWhat is the Capital of " + stateCapital[i][0] + "? ");
	   		   /*Get the input from the user and convert it to lower case. Take the answer from the array and convert it
	   		    to lower case as well to match. If answer is correct, increment the score. If not, give user the answer.
	   		    */
	   		   if (input.nextLine().toLowerCase().equals(stateCapital[i][1].toLowerCase())) {
	   			   System.out.println("That's correct!");
	   			   count++;
	   		   } else {
	   			   System.out.println("\nSorry, the correct answer is " + stateCapital[i][1]);
	   		   } 
	   	   }
	   	   
	   	   
	   	   /* 
	   	      
	   	      Part 2 of the assignment prompts me to store the pairs of each state and its capital in a HashMap (Labeled 2.1 below) 
	   	      and display the contents of the map. Afterwards, it says to sort the map using a TreeMap (Labeled 2.2 below). 
	   	      
	   	      After displaying both maps, the assignment asks us to prompt the user to enter a state and the code should
	   	      display the capital for the state (Labeled 2.3 below). I'm assuming this isn't a game as we just displayed all of the states and its
	   	      capital so this is merely just answering the user's request.
	   	 
	   	 */
	   	   
	   	   
	   	   
	   	   //2.1 - Storing the pairs of each state and its capital into a map using the HashMap function.
	   	   	   
	   	   HashMap<String, String> capitalMap = new HashMap<String, String>(stateCapital.length);
	   	   for (int i = 0; i < stateCapital.length; i++) {
	   		   capitalMap.put(stateCapital[i][0], stateCapital[i][1]);
	   	   }
	   	   
	   	   //2.1 - Displaying the contents of the HashMap
	   	   
	   	   System.out.println("\n========== HASH MAP ==========\n");
	   	   for (String key : capitalMap.keySet()) {
	   		   System.out.println("The Capital of " + key + " is " + capitalMap.get(key));
	   	   }
	   	   
	   	   /*
	   	     2.2 Sorting the map using a TreeMap. I made the TreeMap case insensitive in case the user enters
	   	     a state without proper capitalization (Part 2.3)
	   	   */
	   	   
	   	   Map<String, String> capitalTree = new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER);
	   	   for (String key : capitalMap.keySet()) {
	   		   capitalTree.put(key, capitalMap.get(key));
	   	   }
	   	   
	   	   //endLoop is used here to create a loop
	   	   
	   	   boolean endLoop = false;
	   	   Scanner lScanner = new Scanner(System.in);
	   	   
	   	   //2.3 - Prompting the user to enter a state and displaying the capital
	   	   
	   	   System.out.println("\n========================================");
	   	   System.out.println("\nGOOD JOB!");
	   	   System.out.println("\nYour score is being calculated.");
	   	   System.out.println("\nNow let's try something different in the meantime..");
	   	   System.out.println("\nThis time you list the State");
	   	   System.out.println("\nAnd I'll name you the Capital..");
	   	   System.out.println("\n========================================");
	   	   System.out.println("\nNote: You can enter the command 'quit' to exit and get your score\n");
	   	   
	   	   //Giving the user a way to quit the program
	   	   
	   	   endLoop = false;
	   	   while (!endLoop) {
	   		   System.out.println("Name any State: ");
	   		   String lInput = lScanner.nextLine();
	   		   if (lInput.equalsIgnoreCase("quit")) {
	   			   System.out.println("Exiting..");
	   			   endLoop = true;
	   			   continue;
	   			   
	   		   }
	   	  //Checking to see if user input is inside the map. If not, the program will ask the user again.
	   		   
	   		   if (capitalTree.containsKey(lInput)) {
	   			   System.out.println("\nThe Capital of " + lInput + " is " + capitalTree.get(lInput));
	   		   } else {
	   			   System.out.println("\nSorry, I don't recognize that state. Please enter a US State: \n");
	   		   }	

	   	   }	   

	   	   return count;

			}

	   	//P1: Bubble sort to sort content by Capital
	   	

	   public static void bubbleSort(String[][] arr) {
	      for(int i = 0; i < arr.length - 1; i++){
	   	   for(int j = 0; j < arr.length - i - 1; j++) {
	               if(arr[j][1].compareTo(arr[j + 1][1]) > 0)  {
	                   String[] temp = arr[j];
	                  arr[j] = arr[j + 1];
	                   arr[j + 1] = temp;
	               }
	          }
	   	}
	   	
	   }
	   
	   

	}




